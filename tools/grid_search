#!/usr/bin/env python

import os
import subprocess
import argparse
from sklearn.grid_search import ParameterGrid


TEMPLATE_SERIAL = """
#$ -cwd
#$ -N gs
#$ -e /dev/null/{errfile}
#$ -o /dev/null/{logfile}
#$ -q {queue}

echo "Job started on" `date`
echo

{script}

echo
echo "Job ended on" `date`
"""


def send_code(python_file, queue='larga', **parameters):
    """Put a Python script into an OGE queue.

    Parameters
    ----------
    python_file : str
        Script containing the code to run.
    job_name : str
        Name of the job.
    cleanup : Boolean
        Indicates to remove the temporary file.
    queue: str
        Name of the queue to append the job.
    """

    script = 'python -u ' + python_file
    flags = ''
    for key, value in parameters.iteritems():
        flags += ' --' + key + ' ' + str(value)

    # parameters = '--max_depth %s', parameters['max_depth']
    logfile = '$JOB_NAME_$JOB_ID.out'
    errfile = '$JOB_NAME_$JOB_ID.error'

    # Fill template
    template = TEMPLATE_SERIAL.format(
        script=script,
        logfile=logfile,
        errfile=errfile,
        queue=queue
    )

    # Write temporary file
    open('job.qsub', 'wb').write(template)

    # Make the call to qsub and remove temporary file
    try:
        subprocess.call('qsub < job.qsub', shell=True)
    finally:
        os.remove('job.qsub')


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('script', help='Script name')
    parser.add_argument('-q', '--queue', default='larga', help='Queue to add')

    parser.add_argument('-d', '--max_depth', nargs='+', type=int)
    parser.add_argument('-lr', '--learning_rate', nargs='+', type=float)
    parser.add_argument('-n', '--n_estimators', nargs='+', type=int)

    args = parser.parse_args()

    param_grid = {
        'max_depth': args.max_depth,
        'learning_rate': args.learning_rate,
        'n_estimators': args.n_estimators
    }

    grid = ParameterGrid(param_grid)

    for params in grid:
        send_code(args.script, queue=args.queue, **params)
